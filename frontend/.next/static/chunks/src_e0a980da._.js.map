{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/store/pollStore.ts"],"sourcesContent":["import { axiosInstance } from \"@/lib/axios\";\nimport { Poll } from \"@/types/poll.types\";\nimport toast from \"react-hot-toast\";\nimport { create } from \"zustand\";\n\nexport const pollStore = create((set) => ({\n  poll: null,\n  myPolls: null,\n  isCreatingPoll: false,\n  isFetchingPolls: false,\n  isVotingPoll: false,\n  hasVoted: false,\n\n  CreatePoll: async (data: Poll) => {\n    set({ isCreatingPoll: true });\n    try {\n      const res = await axiosInstance.post(\"/poll/create\", data);\n      set({ poll: res.data });\n      toast.success(\"Poll Created Successfully\");\n      console.log(res.data);\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(\"Error Creating Poll: \" + errorMessage);\n      return false;\n    } finally {\n      set({ isCreatingPoll: false });\n      set({ Poll: null });\n    }\n  },\n  GetPoll: async (id: string) => {\n    set({ isFetchingPolls: true });\n    try {\n      const res = await axiosInstance.get(`/poll/${id}`);\n      console.log(res);\n      if (res.data.message) {\n        set({ hasVoted: true });\n        set({ poll: res.data.poll });\n      } else {\n        set({ poll: res.data });\n      }\n    } catch (error: unknown) {\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as { response?: { data?: { message?: string } } };\n        errorMessage = err.response?.data?.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(errorMessage);\n    }\n  },\n  VotePoll: async (id: string) => {\n    set({ isVotingPoll: true });\n    try {\n      const res = await axiosInstance.put(`/poll/vote/${id}`);\n      toast.success(\"Voted Successfully\");\n      console.log(res.data);\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(\"Error Voting Poll: \" + errorMessage);\n    } finally {\n      set({ isFetchingPolls: false });\n    }\n  },\n  GetMyPoll: async () => {\n    set({ isFetchingPolls: true });\n    try {\n      const res = await axiosInstance.get(\"/poll/my-polls\");\n      set({ myPolls: res.data });\n      // console.log(res.data);\n    } catch {\n      console.log(\"Error fetching polls\");\n    }\n  },\n}));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/app/%28root%29/poll/vote/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { use, useState, useEffect } from \"react\";\nimport { Button, Typography, Box } from \"@mui/material\";\nimport { Option, PollStoreType } from \"@/types/poll.types\";\nimport { pollStore } from \"@/store/pollStore\";\n\nconst VotePage = ({ params }: { params: Promise<{ id: string }> }) => {\n  const { poll, GetPoll, VotePoll, hasVoted } = pollStore() as PollStoreType;\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n  const pollQuestion: string = poll?.question || \"Loading...\";\n  const options: Option[] = poll?.Option.map((opt) => opt) || [];\n\n  const { id } = use(params);\n\n  useEffect(() => {\n    GetPoll(id);\n  }, [id, GetPoll]);\n\n  const handleVote = async (option: string) => {\n    setSelectedOption(option);\n    await VotePoll(option);\n    await GetPoll(id);\n  };\n\n  return (\n    <Box className=\"flex flex-col items-center justify-center min-h-[80vh] text-white px-4\">\n      {/* Question */}\n      <Typography\n        variant=\"h4\"\n        className=\"p-8 text-center font-bold text-yellow-400\"\n      >\n        {pollQuestion}\n      </Typography>\n      {/* Options */}\n      <Box className=\"grid grid-cols-2  justify-around space-x-5 space-y-6 w-full max-w-md\">\n        {options.map((option) => (\n          <Button\n            key={option.id}\n            onClick={() => handleVote(option.id)}\n            disabled={hasVoted}\n            fullWidth\n            sx={{\n              margin: \"8px\",\n              borderRadius: \"12px\",\n              padding: \"16px\",\n              fontSize: \"20px\",\n              borderColor: \"#ccc\",\n              color: \"#fff\",\n              backgroundColor:\n                selectedOption === option.id ? \"#facc15\" : \"transparent\",\n              \"&:hover\": {\n                backgroundColor: hasVoted ? \"transparent\" : \"#facc15\",\n                color: hasVoted ? \"#fff\" : \"#000\",\n              },\n              \"&.Mui-disabled\": {\n                opacity: 1, // prevent default grey-out\n                color: \"#5bcfb1\",\n                borderColor: \"#5bcfb1\",\n                backgroundColor: \"transparent\",\n              },\n            }}\n            variant={selectedOption === option.id ? \"contained\" : \"outlined\"}\n          >\n            {option.text}\n            {hasVoted && (\n              <Typography\n                // variant=\"h5\"\n                sx={{ marginLeft: \"10px\", fontSize: \"26px\" }}\n              >\n                {option.votesCount}\n              </Typography>\n            )}\n          </Button>\n        ))}\n      </Box>\n      {hasVoted && (\n        <Typography variant=\"h4\" className=\"pt-6 text-white font-bold\">\n          Total votes:{\" \"}\n          <span className=\"text-[#5bcfb1]\">\n            {options.reduce((acc, opt) => acc + opt.votesCount, 0)}\n          </span>\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default VotePage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAEA;;;AALA;;;;AAOA,MAAM,WAAW,CAAC,EAAE,MAAM,EAAuC;;IAC/D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,YAAS,AAAD;IACtD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,eAAuB,MAAM,YAAY;IAC/C,MAAM,UAAoB,MAAM,OAAO,IAAI,CAAC,MAAQ,QAAQ,EAAE;IAE9D,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,MAAG,AAAD,EAAE;IAEnB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,QAAQ;QACV;6BAAG;QAAC;QAAI;KAAQ;IAEhB,MAAM,aAAa,OAAO;QACxB,kBAAkB;QAClB,MAAM,SAAS;QACf,MAAM,QAAQ;IAChB;IAEA,qBACE,6LAAC,2LAAA,CAAA,MAAG;QAAC,WAAU;;0BAEb,6LAAC,gNAAA,CAAA,aAAU;gBACT,SAAQ;gBACR,WAAU;0BAET;;;;;;0BAGH,6LAAC,2LAAA,CAAA,MAAG;gBAAC,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC,oMAAA,CAAA,SAAM;wBAEL,SAAS,IAAM,WAAW,OAAO,EAAE;wBACnC,UAAU;wBACV,SAAS;wBACT,IAAI;4BACF,QAAQ;4BACR,cAAc;4BACd,SAAS;4BACT,UAAU;4BACV,aAAa;4BACb,OAAO;4BACP,iBACE,mBAAmB,OAAO,EAAE,GAAG,YAAY;4BAC7C,WAAW;gCACT,iBAAiB,WAAW,gBAAgB;gCAC5C,OAAO,WAAW,SAAS;4BAC7B;4BACA,kBAAkB;gCAChB,SAAS;gCACT,OAAO;gCACP,aAAa;gCACb,iBAAiB;4BACnB;wBACF;wBACA,SAAS,mBAAmB,OAAO,EAAE,GAAG,cAAc;;4BAErD,OAAO,IAAI;4BACX,0BACC,6LAAC,gNAAA,CAAA,aAAU;gCACT,eAAe;gCACf,IAAI;oCAAE,YAAY;oCAAQ,UAAU;gCAAO;0CAE1C,OAAO,UAAU;;;;;;;uBAhCjB,OAAO,EAAE;;;;;;;;;;YAsCnB,0BACC,6LAAC,gNAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,WAAU;;oBAA4B;oBAChD;kCACb,6LAAC;wBAAK,WAAU;kCACb,QAAQ,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,IAAI,UAAU,EAAE;;;;;;;;;;;;;;;;;;AAMhE;GA/EM;KAAA;uCAiFS","debugId":null}}]
}