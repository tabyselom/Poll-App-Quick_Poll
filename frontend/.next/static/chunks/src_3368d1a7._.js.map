{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/lib/axios.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst baseURL =\n  process.env.NODE_ENV === \"development\" ? \"http://localhost:5001/api\" : \"/api\";\n\nexport const axiosInstance = axios.create({\n  baseURL,\n  withCredentials: true,\n});\n"],"names":[],"mappings":";;;AAGE;AAHF;;AAEA,MAAM,UACJ,uCAAyC;AAEpC,MAAM,gBAAgB,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACxC;IACA,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/store/userStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { axiosInstance } from \"../lib/axios\";\nimport toast from \"react-hot-toast\";\nimport { loginUser, user } from \"@/types/user.types\";\n\nexport const userStore = create((set) => ({\n  user: null,\n  isSigningUp: false,\n  isLoggingIn: false,\n\n  CheckUser: async () => {\n    try {\n      const res = await axiosInstance.get(\"/auth\");\n      set({ user: res.data });\n    } catch {\n      set({ user: null });\n    }\n  },\n\n  Signup: async (data: user) => {\n    set({ isSigningUp: true });\n    try {\n      const res = await axiosInstance.post(\"/auth/signup\", data);\n      set({ user: res.data });\n      toast.success(\"Signed Up Successfully\");\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(\"Error Signing Up: \" + errorMessage);\n    } finally {\n      set({ isSigningUp: false });\n    }\n  },\n  Logout: async () => {\n    try {\n      const res = await axiosInstance.get(\"/auth/logout\");\n      if (res.status === 200) {\n        set({ user: null });\n        toast.success(\"Logged out successfully\");\n      } else {\n        toast.error(\"Error logging out: \" + res.data.error);\n      }\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(\"Error logging out: \" + errorMessage);\n    }\n  },\n  Login: async (data: loginUser) => {\n    try {\n      set({ isLoggingIn: true });\n      const res = await axiosInstance.post(\"/auth/login\", data);\n\n      set({ user: res.data });\n      toast.success(\"Logged in successfully\");\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      } else {\n        errorMessage = \"An unexpected error occurred\";\n      }\n      toast.error(\"Error logging in: \" + errorMessage);\n    } finally {\n      set({ isLoggingIn: false });\n    }\n  },\n}));\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,MAAM,YAAY,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAE,CAAC,MAAQ,CAAC;QACxC,MAAM;QACN,aAAa;QACb,aAAa;QAEb,WAAW;YACT,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;gBACpC,IAAI;oBAAE,MAAM,IAAI,IAAI;gBAAC;YACvB,EAAE,OAAM;gBACN,IAAI;oBAAE,MAAM;gBAAK;YACnB;QACF;QAEA,QAAQ,OAAO;YACb,IAAI;gBAAE,aAAa;YAAK;YACxB,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,gBAAgB;gBACrD,IAAI;oBAAE,MAAM,IAAI,IAAI;gBAAC;gBACrB,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YAChB,EAAE,OAAO,OAAgB;gBACvB,QAAQ,GAAG,CAAC;gBACZ,IAAI,eAAe;gBACnB,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,cAAc,OAAO;oBACtE,MAAM,MAAM;oBAIZ,eAAe,IAAI,QAAQ,EAAE,MAAM,SAAS,IAAI,OAAO,IAAI;gBAC7D,OAAO,IAAI,OAAO,UAAU,UAAU;oBACpC,eAAe;gBACjB;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,uBAAuB;YACrC,SAAU;gBACR,IAAI;oBAAE,aAAa;gBAAM;YAC3B;QACF;QACA,QAAQ;YACN,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;gBACpC,IAAI,IAAI,MAAM,KAAK,KAAK;oBACtB,IAAI;wBAAE,MAAM;oBAAK;oBACjB,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;gBAChB,OAAO;oBACL,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,wBAAwB,IAAI,IAAI,CAAC,KAAK;gBACpD;YACF,EAAE,OAAO,OAAgB;gBACvB,QAAQ,GAAG,CAAC;gBACZ,IAAI,eAAe;gBACnB,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,cAAc,OAAO;oBACtE,MAAM,MAAM;oBAIZ,eAAe,IAAI,QAAQ,EAAE,MAAM,SAAS,IAAI,OAAO,IAAI;gBAC7D,OAAO,IAAI,OAAO,UAAU,UAAU;oBACpC,eAAe;gBACjB;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,wBAAwB;YACtC;QACF;QACA,OAAO,OAAO;YACZ,IAAI;gBACF,IAAI;oBAAE,aAAa;gBAAK;gBACxB,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,eAAe;gBAEpD,IAAI;oBAAE,MAAM,IAAI,IAAI;gBAAC;gBACrB,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YAChB,EAAE,OAAO,OAAgB;gBACvB,QAAQ,GAAG,CAAC;gBACZ,IAAI,eAAe;gBACnB,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,cAAc,OAAO;oBACtE,MAAM,MAAM;oBAIZ,eAAe,IAAI,QAAQ,EAAE,MAAM,SAAS,IAAI,OAAO,IAAI;gBAC7D,OAAO,IAAI,OAAO,UAAU,UAAU;oBACpC,eAAe;gBACjB,OAAO;oBACL,eAAe;gBACjB;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,uBAAuB;YACrC,SAAU;gBACR,IAAI;oBAAE,aAAa;gBAAM;YAC3B;QACF;IACF,CAAC","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/app/%28auth%29/user/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n  Paper,\n} from \"@mui/material\";\n\nimport { userStore } from \"@/store/userStore\";\nimport { UserStoreType } from \"@/types/user.types\";\nimport { useRouter } from \"next/navigation\";\n\nfunction LoginPage() {\n  const router = useRouter();\n  const { isLoggingIn, Login, user, CheckUser } = userStore() as UserStoreType;\n\n  useEffect(() => {\n    CheckUser();\n  }, [CheckUser]);\n\n  useEffect(() => {\n    if (user) {\n      router.push(\"/\");\n    }\n  }, [user, router]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const email = form.email.value;\n    const password = form.password.value;\n\n    const data = {\n      email,\n      password,\n    };\n\n    Login(data);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"80vh\"\n      >\n        <Paper\n          elevation={6}\n          sx={{\n            padding: 4,\n            bgcolor: \"#112330\",\n            boxShadow: \"0px 0px 24px 2px rgba(91,207,177,0.63)\",\n            borderRadius: 3,\n            width: \"100%\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            component=\"h2\"\n            textAlign=\"center\"\n            gutterBottom\n            sx={{ color: \"white\", fontWeight: \"bold\" }}\n          >\n            Log In\n          </Typography>\n\n          <Box component=\"form\" onSubmit={handleSubmit}>\n            <TextField\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              required\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{ style: { color: \"#ccc\" } }}\n              InputProps={{ style: { color: \"white\" } }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"& fieldset\": { borderColor: \"#5bcfb1\" },\n                  \"&:hover fieldset\": { borderColor: \"#5bcfb1\" },\n                  \"&.Mui-focused fieldset\": { borderColor: \"#5bcfb1\" },\n                },\n              }}\n            />\n\n            <TextField\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              required\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              InputLabelProps={{ style: { color: \"#ccc\" } }}\n              InputProps={{ style: { color: \"white\" } }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"& fieldset\": { borderColor: \"#5bcfb1\" },\n                  \"&:hover fieldset\": { borderColor: \"#5bcfb1\" },\n                  \"&.Mui-focused fieldset\": { borderColor: \"#5bcfb1\" },\n                },\n              }}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              disabled={isLoggingIn}\n              variant=\"contained\"\n              sx={{\n                marginTop: 2,\n                backgroundColor: \"#5bcfb1\",\n                color: \"#112330\",\n                fontWeight: \"bold\",\n                \"&:hover\": { backgroundColor: \"#4fbfa1\" },\n              }}\n            >\n              {isLoggingIn ? \"Logging In ...\" : \"Log In\"}\n            </Button>\n          </Box>\n\n          <Typography\n            variant=\"body2\"\n            textAlign=\"center\"\n            sx={{ color: \"#ccc\", marginTop: 2 }}\n          >\n            Don't have an account?{\" \"}\n            <a href=\"/user/signup\" style={{ color: \"#5bcfb1\" }}>\n              Sign Up\n            </a>\n          </Typography>\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}