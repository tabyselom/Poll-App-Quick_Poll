{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/store/pollStore.ts"],"sourcesContent":["import { axiosInstance } from \"@/lib/axios\";\nimport { Poll } from \"@/types/poll.types\";\nimport toast from \"react-hot-toast\";\nimport { create } from \"zustand\";\n\nexport const pollStore = create((set) => ({\n  poll: null,\n  myPolls: null,\n  isCreatingPoll: false,\n  isFetchingPolls: false,\n  isVotingPoll: false,\n  hasVoted: false,\n\n  CreatePoll: async (data: Poll) => {\n    set({ isCreatingPoll: true });\n    try {\n      const res = await axiosInstance.post(\"/poll/create\", data);\n      set({ poll: res.data });\n      toast.success(\"Poll Created Successfully\");\n      console.log(res.data);\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(\"Error Creating Poll: \" + errorMessage);\n      return false;\n    } finally {\n      set({ isCreatingPoll: false });\n      set({ Poll: null });\n    }\n  },\n  GetPoll: async (id: string) => {\n    set({ isFetchingPolls: true });\n    try {\n      const res = await axiosInstance.get(`/poll/${id}`);\n      console.log(res);\n      if (res.data.message) {\n        set({ hasVoted: true });\n        set({ poll: res.data.poll });\n      } else {\n        set({ poll: res.data });\n      }\n    } catch (error: unknown) {\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as { response?: { data?: { message?: string } } };\n        errorMessage = err.response?.data?.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(errorMessage);\n    }\n  },\n  VotePoll: async (id: string) => {\n    set({ isVotingPoll: true });\n    try {\n      const res = await axiosInstance.put(`/poll/vote/${id}`);\n      toast.success(\"Voted Successfully\");\n      console.log(res.data);\n    } catch (error: unknown) {\n      console.log(error);\n      let errorMessage = \"An unknown error occurred\";\n      if (typeof error === \"object\" && error !== null && \"response\" in error) {\n        const err = error as {\n          response?: { data?: { error?: string } };\n          message?: string;\n        };\n        errorMessage = err.response?.data?.error || err.message || errorMessage;\n      } else if (typeof error === \"string\") {\n        errorMessage = error;\n      }\n      toast.error(\"Error Voting Poll: \" + errorMessage);\n    } finally {\n      set({ isFetchingPolls: false });\n    }\n  },\n  GetMyPoll: async () => {\n    set({ isFetchingPolls: true });\n    try {\n      const res = await axiosInstance.get(\"/poll/my-polls\");\n      set({ myPolls: res.data });\n      // console.log(res.data);\n    } catch {\n      console.log(\"Error fetching polls\");\n    }\n  },\n}));\n"],"names":[],"mappings":";;;AAAA;AAEA;AACA;;;;AAEO,MAAM,YAAY,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAE,CAAC,MAAQ,CAAC;QACxC,MAAM;QACN,SAAS;QACT,gBAAgB;QAChB,iBAAiB;QACjB,cAAc;QACd,UAAU;QAEV,YAAY,OAAO;YACjB,IAAI;gBAAE,gBAAgB;YAAK;YAC3B,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,IAAI,CAAC,gBAAgB;gBACrD,IAAI;oBAAE,MAAM,IAAI,IAAI;gBAAC;gBACrB,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;gBACd,QAAQ,GAAG,CAAC,IAAI,IAAI;YACtB,EAAE,OAAO,OAAgB;gBACvB,QAAQ,GAAG,CAAC;gBACZ,IAAI,eAAe;gBACnB,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,cAAc,OAAO;oBACtE,MAAM,MAAM;oBAIZ,eAAe,IAAI,QAAQ,EAAE,MAAM,SAAS,IAAI,OAAO,IAAI;gBAC7D,OAAO,IAAI,OAAO,UAAU,UAAU;oBACpC,eAAe;gBACjB;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,0BAA0B;gBACtC,OAAO;YACT,SAAU;gBACR,IAAI;oBAAE,gBAAgB;gBAAM;gBAC5B,IAAI;oBAAE,MAAM;gBAAK;YACnB;QACF;QACA,SAAS,OAAO;YACd,IAAI;gBAAE,iBAAiB;YAAK;YAC5B,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI;gBACjD,QAAQ,GAAG,CAAC;gBACZ,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;oBACpB,IAAI;wBAAE,UAAU;oBAAK;oBACrB,IAAI;wBAAE,MAAM,IAAI,IAAI,CAAC,IAAI;oBAAC;gBAC5B,OAAO;oBACL,IAAI;wBAAE,MAAM,IAAI,IAAI;oBAAC;gBACvB;YACF,EAAE,OAAO,OAAgB;gBACvB,IAAI,eAAe;gBACnB,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,cAAc,OAAO;oBACtE,MAAM,MAAM;oBACZ,eAAe,IAAI,QAAQ,EAAE,MAAM,WAAW;gBAChD,OAAO,IAAI,OAAO,UAAU,UAAU;oBACpC,eAAe;gBACjB;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC;YACd;QACF;QACA,UAAU,OAAO;YACf,IAAI;gBAAE,cAAc;YAAK;YACzB,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,IAAI;gBACtD,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;gBACd,QAAQ,GAAG,CAAC,IAAI,IAAI;YACtB,EAAE,OAAO,OAAgB;gBACvB,QAAQ,GAAG,CAAC;gBACZ,IAAI,eAAe;gBACnB,IAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,cAAc,OAAO;oBACtE,MAAM,MAAM;oBAIZ,eAAe,IAAI,QAAQ,EAAE,MAAM,SAAS,IAAI,OAAO,IAAI;gBAC7D,OAAO,IAAI,OAAO,UAAU,UAAU;oBACpC,eAAe;gBACjB;gBACA,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,wBAAwB;YACtC,SAAU;gBACR,IAAI;oBAAE,iBAAiB;gBAAM;YAC/B;QACF;QACA,WAAW;YACT,IAAI;gBAAE,iBAAiB;YAAK;YAC5B,IAAI;gBACF,MAAM,MAAM,MAAM,sHAAA,CAAA,gBAAa,CAAC,GAAG,CAAC;gBACpC,IAAI;oBAAE,SAAS,IAAI,IAAI;gBAAC;YACxB,yBAAyB;YAC3B,EAAE,OAAM;gBACN,QAAQ,GAAG,CAAC;YACd;QACF;IACF,CAAC","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///home/phoniex/Desktop/node/pollapp/frontend/src/app/%28root%29/poll/create/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect } from \"react\";\nimport { Box, TextField, Button, Typography } from \"@mui/material\";\nimport { useRouter } from \"next/navigation\";\nimport { userStore } from \"@/store/userStore\";\nimport { UserStoreType } from \"@/types/user.types\";\nimport { pollStore } from \"@/store/pollStore\";\nimport Link from \"next/link\";\nimport { PollStoreType } from \"@/types/poll.types\";\n\nfunction CreatePage() {\n  const { user, CheckUser } = userStore() as UserStoreType;\n  const { poll, CreatePoll, isCreatingPoll } = pollStore() as PollStoreType;\n  const router = useRouter();\n\n  useEffect(() => {\n    CheckUser();\n  }, [CheckUser]);\n\n  const isLoggedIn = user;\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const question = form.question.value;\n    const options: string[] = form.options.value\n      .split(\",\")\n      .map((opt: string) => opt.trim());\n\n    if (!question || options.length < 2) {\n      alert(\"Please fill in all fields correctly.\");\n      return;\n    }\n\n    const data = {\n      question,\n      options,\n    };\n    console.log(data);\n    CreatePoll(data);\n  };\n\n  const handleCopy = () => {\n    if (poll?.id) {\n      navigator.clipboard.writeText(`/poll/vote/${poll.id}`);\n      alert(\"Poll link copied to clipboard!\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-[80vh]\">\n      {isLoggedIn ? (\n        !poll ? (\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            className=\"w-full max-w-md space-y-6\"\n            sx={{\n              padding: 5,\n              bgcolor: \"#112330\",\n              boxShadow: \"0px 0px 24px 2px rgba(91,207,177,0.63)\",\n              borderRadius: 3,\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Typography\n              className=\" text-center pb-8 font-bold text-white\"\n              variant=\"h3\"\n            >\n              Create Poll\n            </Typography>\n            <TextField\n              label=\"Poll Question\"\n              required\n              fullWidth\n              name=\"question\"\n              InputLabelProps={{ style: { color: \"#ccc\" } }}\n              InputProps={{ style: { color: \"#fff\" } }}\n              sx={{\n                marginBottom: 2,\n                \"& .MuiOutlinedInput-root\": {\n                  \"& fieldset\": {\n                    borderColor: \"#ccc\",\n                  },\n                  \"&:hover fieldset\": {\n                    borderColor: \"#5bcfb1\",\n                  },\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: \"#5bcfb1\", // Yellow on focus\n                  },\n                },\n              }}\n            />\n\n            <TextField\n              label=\"Options (comma separated)\"\n              required\n              name=\"options\"\n              fullWidth\n              InputLabelProps={{ style: { color: \"#ccc\" } }}\n              InputProps={{ style: { color: \"#fff\" } }}\n              sx={{\n                marginBottom: 2,\n                \"& .MuiOutlinedInput-root\": {\n                  \"& fieldset\": {\n                    borderColor: \"#ccc\",\n                  },\n                  \"&:hover fieldset\": {\n                    borderColor: \"#5bcfb1\",\n                  },\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: \"#5bcfb1\", // Yellow on focus\n                  },\n                },\n              }}\n            />\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              disabled={isCreatingPoll}\n              sx={{\n                backgroundColor: \"#5bcfb1\",\n                color: \"#112330\",\n              }}\n            >\n              {isCreatingPoll ? \"Creating...\" : \"Create Poll\"}\n            </Button>\n          </Box>\n        ) : (\n          <div className=\"flex flex-col items-center space-y-4 mt-8\">\n            <Typography variant=\"h3\" className=\"text-green-400 \">\n              🎉 Poll created successfully!\n            </Typography>\n            <Typography variant=\"h5\" className=\"text-white p-5\">\n              Poll ID: <span className=\"text-blue-400\">{poll.id}</span>\n            </Typography>\n            <Typography className=\"text-white text-center\" variant=\"h5\">\n              Share this link: <br />\n              <a\n                href={`${process.env.NEXT_PUBLIC_FRONT_URL}/poll/vote/${poll.id}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue-400 underline\"\n              >\n                {process.env.NEXT_PUBLIC_FRONT_URL}/poll/vote/{poll.id}\n              </a>\n            </Typography>\n            <Button onClick={handleCopy} variant=\"outlined\" color=\"secondary\">\n              Copy Link\n            </Button>\n\n            <Button\n              onClick={() => {\n                router.push(\"/\");\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Back to Home\n            </Button>\n          </div>\n        )\n      ) : (\n        <div className=\"flex flex-col items-center space-y-4\">\n          <Typography variant=\"h5\" className=\"text-white\">\n            To create a poll you need to log in\n          </Typography>\n          <div className=\"flex space-x-4\">\n            <Link href=\"/user/signup\">\n              <Button variant=\"outlined\" color=\"primary\">\n                Sign Up\n              </Button>\n            </Link>\n            <Link href=\"/user/login\">\n              <Button variant=\"contained\" color=\"primary\">\n                Log In\n              </Button>\n            </Link>\n          </div>\n        </div>\n      )}\n      `\n    </div>\n  );\n}\n\nexport default CreatePage;\n"],"names":[],"mappings":"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","debugId":null}}]
}